import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:trashtagApp/src/bloc/authentication/authentication_bloc.dart';
import 'package:trashtagApp/src/widgets/scaffold_scroll.dart';
import 'package:trashtagApp/src/widgets/trashtag_logo.dart';
import 'package:url_launcher/url_launcher.dart';

class PrivacyPolicyPage extends StatelessWidget {
  const PrivacyPolicyPage({Key key}) : super(key: key);

  final _definitions = """
To help explain things as clearly as possible in this Privacy Policy, every time any of these terms are referenced, are strictly
defined as:
● Cookie: small amount of data generated by a website and saved by your web browser. It is used to identify your browser,
provide analytics, remember information about you such as your language preference or login information.
● Company: when this policy mentions “Company,” “we,” “us,” or “our,” it refers to Trashtag, Bnei Moshe 21 Tel Aviv that is
responsible for your information under this Privacy Policy.
● Country: where Trashtag or the owners/founders of Trashtag are based, in this case is Israel
● Customer: refers to the company, organization or person that signs up to use the Trashtag Service to manage the
relationships with your consumers or service users.
● Device: any internet connected device such as a phone, tablet, computer or any other device that can be used to visit
Trashtag and use the services.
● IP address: Every device connected to the Internet is assigned a number known as an Internet protocol (IP) address.
These numbers are usually assigned in geographic blocks. An IP address can often be used to identify the location from
which a device is connecting to the Internet.
● Personnel: refers to those individuals who are employed by Trashtag or are under contract to perform a service on behalf
of one of the parties.
● Personal Data: any information that directly, indirectly, or in connection with other information — including a personal
identification number — allows for the identification or identifiability of a natural person.
● Service: refers to the service provided by Trashtag as described in the relative terms (if available) and on this platform.
● Third-party service: refers to advertisers, contest sponsors, promotional and marketing partners, and others who provide
our content or whose products or services we think may interest you.
● Website: site, which can be accessed via this URL:
● You: a person or entity that is registered with Trashtag to use the Services.
""";

  final _whatInformation = """
We collect information from you when you visit our app, register on our site, place an order, subscribe to our newsletter, respond
to a survey or fill out a form.
● Name / Username
● Phone Numbers
● Email Addresses
● Mailing Addresses
● Job Titles
● Age
● Password
We also collect information from mobile devices for a better user experience, although these features are completely optional:

● Location (GPS): Location data helps to create an accurate representation of your interests, and this can be used to bring
more targeted and relevant ads to potential customers.
""";

  final _howUserInformation = """
Any of the information we collect from you may be used in one of the following ways:
● To personalize your experience (your information helps us to better respond to your individual needs)
● To improve our app (we continually strive to improve our app offerings based on the information and feedback we receive
from you)
● To improve customer service (your information helps us to more effectively respond to your customer service requests and
support needs)
● To process transactions
● To administer a contest, promotion, survey or other site feature
● To send periodic emails
""";

  final _howUseEmail = """
By submitting your email address on this app, you agree to receive emails from us. You can cancel your participation in any of
these email lists at any time by clicking on the opt-out link or other unsubscribe option that is included in the respective email.
We only send emails to people who have authorized us to contact them, either directly, or through a third party. We do not send
unsolicited commercial emails, because we hate spam as much as you do. By submitting your email address, you also agree to
allow us to use your email address for customer audience targeting on sites like Facebook, where we display custom advertising
to specific people who have opted-in to receive communications from us. Email addresses submitted only through the order
processing page will be used for the sole purpose of sending you information and updates pertaining to your order. If, however,
you have provided the same email to us through another method, we may use it for any of the purposes stated in this Policy.
Note: If at any time you would like to unsubscribe from receiving future emails, we include detailed unsubscribe instructions at
the bottom of each email.
""";

  final _contact = """
Don't hesitate to contact us if you have any questions.

● Via Email: trashtaginitiative@gmail.com
""";

  void _onGoToSplashScreenButtonPressed(BuildContext context) {
    BlocProvider.of<AuthenticationBloc>(context).add(
      AuthenticationLoggedOut(),
    );
  }

  @override
  Widget build(BuildContext context) {
    return ScaffoldScroll(
      child: _body(context),
    );
  }

  Widget _body(BuildContext context) {
    return Container(
      padding: EdgeInsets.all(20.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[
          TrashTagLogo(assetName: 'assets/images/TrashTagLogo02.png'),
          SizedBox(height: 20.0),
          _title(),
          _goToSplashScreen(context),
          _content(),
          SizedBox(height: 40.0),
          _goToSplashScreen(context),
        ],
      ),
    );
  }

  Widget _title() {
    return ListTile(
      contentPadding: EdgeInsets.all(0.0),
      title: Text(
        'Privacy Policy',
        textAlign: TextAlign.center,
        style: TextStyle(fontWeight: FontWeight.bold, fontSize: 40.0),
      ),
    );
  }

  Widget _goToSplashScreen(BuildContext context) {
    return Column(
      children: [
        Divider(),
        FlatButton(
          child: Text(
            "Go to the splash screen",
            style: TextStyle(
              fontSize: 16.0,
              color: Theme.of(context).primaryColor,
              decoration: TextDecoration.underline,
            ),
          ),
          onPressed: () => _onGoToSplashScreenButtonPressed(context),
        ),
        Divider(),
        SizedBox(height: 30.0),
      ],
    );
  }  

  Widget _content() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text('Updated at 2020-09-17'),
        SizedBox(height: 20.0),
        _item('Definitions and key terms', _definitions),
        _item('What Information Do We Collect?', _whatInformation),
        _item('How Do We Use The Information We Collect?', _howUserInformation),
        _item('How Do We Use Your Email Address?', _howUseEmail),
        _item('Contact Us', _contact),
        _viewOnlineTerms(),

      ],
    );
  }

  Widget _item(String title, String content) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SizedBox(height: 10.0),
        _itemTitle(title),
        SizedBox(height: 10.0),
        _itemText(content),
        SizedBox(height: 10.0),
      ],
    );
  }

  Widget _itemText(String text) {
    return Text(text, textAlign: TextAlign.justify);
  }

  Widget _itemTitle(String text) {
    return Text(text, style: TextStyle(fontWeight: FontWeight.bold));
  }

  Widget _viewOnlineTerms() {
    return Container(
      width: double.infinity,
      child: FlatButton(
        child: Text(
          "To know more go to this link",
          style: TextStyle(
            color: Colors.blue,
            decoration: TextDecoration.underline,
          ),
        ),
        onPressed: _launchURL,
      ),
    );
  }

  void _launchURL() async {
    const url = 'https://drive.google.com/file/d/1E_NiHVK2GLswJFyM1quaLQCj7HSobuSR/view';
    if (await canLaunch(url)) {
      await launch(url);
    } else {
      print('Link could not be opened');
    }
  }
}
